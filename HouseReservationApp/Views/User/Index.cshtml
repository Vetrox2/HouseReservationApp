@using HouseReservationApp.Models.DB.Entities
@model PagedResult<User>

<h1 class="mb-5">User List</h1>
<a asp-action="Create" class="btn btn-success mb-3">Add User</a>

<table class="table table-hover table-striped">
	<caption>List of users</caption>
	<thead class="table-primary">
		<tr>
			<th scope="col">ID</th>
			<th scope="col">First Name</th>
			<th scope="col">Last Name</th>
			<th scope="col">Email</th>
			<th scope="col">Phone Number</th>
			<th scope="col">Bank Account</th>
			<th scope="col">Created at</th>
			<th scope="col"></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var user in Model.Items)
		{
			<tr>
				<td class="align-middle">@user.Id</td>
				<td class="align-middle">@user.FirstName</td>
				<td class="align-middle">@user.LastName</td>
				<td class="align-middle">@user.Email</td>
				<td class="align-middle">@user.Phone</td>
				<td class="align-middle">@user.BankAccount</td>
				<td class="align-middle">@user.CreatedAt.ToString("dd/MM/yyyy")</td>
				<td class="pe-0 align-middle d-flex gap-1">
					<a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-primary"><i class="bi bi-pencil-square"></i></a>
					<form asp-action="Delete" method="post">
						@Html.AntiForgeryToken()
						<input type="hidden" name="id" value="@user.Id" />
						<button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete @user.FirstName @user.LastName?');">
							<i class="bi bi-trash"></i>
						</button>
					</form>
				</td>
			</tr>
		}
	</tbody>
</table>

<div class="d-flex flex-column align-items-center mt-4">
	<p>Showing @(Model.Items.Count()) of @Model.TotalCount users (Page @Model.CurrentPage of @Model.TotalPages)</p>

	<nav aria-label="User pagination">
		<ul class="pagination justify-content-center">
			<!-- Previous Button -->
			<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
				<a class="page-link"
				   href="@(Model.CurrentPage > 1 ? Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize }) : "#")"
				   aria-label="Previous">
					<span aria-hidden="true">&laquo;</span>
				</a>
			</li>

			<!-- Page Numbers -->
			@{
				int startPage = Math.Max(1, Model.CurrentPage - 2);
				int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);

				// Always show the first page
				if (startPage > 1)
				{
					<li class="page-item">
						<a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })">1</a>
					</li>
					if (startPage > 2)
					{
						<li class="page-item disabled"><span class="page-link">...</span></li>
					}
				}

				// Show pages around the current page
				for (int i = startPage; i <= endPage; i++)
				{
					<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
						<a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
					</li>
				}

				// Always show the last page
				if (endPage < Model.TotalPages)
				{
					if (endPage < Model.TotalPages - 1)
					{
						<li class="page-item disabled"><span class="page-link">...</span></li>
					}
					<li class="page-item">
						<a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })">@Model.TotalPages</a>
					</li>
				}
			}

			<!-- Next Button -->
			<li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
				<a class="page-link"
				   href="@(Model.CurrentPage < Model.TotalPages ? Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize }) : "#")"
				   aria-label="Next">
					<span aria-hidden="true">&raquo;</span>
				</a>
			</li>
		</ul>
	</nav>
</div>